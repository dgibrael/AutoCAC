// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace AutoCAC.Models;

public partial class mainContext : DbContext
{
    public mainContext(DbContextOptions<mainContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Drug> Drugs { get; set; }

    public virtual DbSet<MenuBuild> MenuBuilds { get; set; }

    public virtual DbSet<MenuBuildMetum> MenuBuildMeta { get; set; }

    public virtual DbSet<Ndf> Ndfs { get; set; }

    public virtual DbSet<OrderDialog> OrderDialogs { get; set; }

    public virtual DbSet<OrderMenu> OrderMenus { get; set; }

    public virtual DbSet<PharmacyOrderableItem> PharmacyOrderableItems { get; set; }

    public virtual DbSet<VwNdcLookup> VwNdcLookups { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Drug>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Drug__3213E83F85628773");

            entity.ToTable("Drug");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.ApplicationPackage).IsUnicode(false);
            entity.Property(e => e.BenchmarkPricePerDispenseUnit).IsUnicode(false);
            entity.Property(e => e.DeaSpcl).IsUnicode(false);
            entity.Property(e => e.DispenseUnit).IsUnicode(false);
            entity.Property(e => e.DispenseUnitsPerOrderUnit).IsUnicode(false);
            entity.Property(e => e.DosageForm).IsUnicode(false);
            entity.Property(e => e.DrugClass).IsUnicode(false);
            entity.Property(e => e.Generic).IsUnicode(false);
            entity.Property(e => e.InactiveDate).HasColumnType("datetime");
            entity.Property(e => e.LocalPossibleDosage).IsUnicode(false);
            entity.Property(e => e.Message).IsUnicode(false);
            entity.Property(e => e.Name).IsUnicode(false);
            entity.Property(e => e.NcpdpDispenseUnit).IsUnicode(false);
            entity.Property(e => e.Ndc).IsUnicode(false);
            entity.Property(e => e.Nf)
                .IsUnicode(false)
                .HasColumnName("NF");
            entity.Property(e => e.OrderUnit).IsUnicode(false);
            entity.Property(e => e.PackageSize).IsUnicode(false);
            entity.Property(e => e.PackageType).IsUnicode(false);
            entity.Property(e => e.PharmacyOrderableItem).IsUnicode(false);
            entity.Property(e => e.PharmacyOrderableItemId)
                .IsUnicode(false)
                .HasColumnName("PharmacyOrderableItemID");
            entity.Property(e => e.PossibleDosages).IsUnicode(false);
            entity.Property(e => e.PricePerDispenseUnit).IsUnicode(false);
            entity.Property(e => e.PricePerOrderUnit).IsUnicode(false);
            entity.Property(e => e.Restriction).IsUnicode(false);
            entity.Property(e => e.RxCui)
                .IsUnicode(false)
                .HasColumnName("RxCUI");
            entity.Property(e => e.Strength).IsUnicode(false);
            entity.Property(e => e.Synonym).IsUnicode(false);
            entity.Property(e => e.Unit).IsUnicode(false);
            entity.Property(e => e.VaPrintName).IsUnicode(false);
        });

        modelBuilder.Entity<MenuBuild>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MenuBuil__3214EC07338C1A0A");

            entity.ToTable("MenuBuild");

            entity.HasIndex(e => new { e.MenuId, e.RowNum, e.ColNum }, "UQ_MenuBuild_MenuRowCol").IsUnique();

            entity.Property(e => e.DisplayOnly).HasMaxLength(50);
            entity.Property(e => e.DisplayText).HasMaxLength(255);
            entity.Property(e => e.ItemId).HasColumnName("Item_id");
            entity.Property(e => e.MenuId).HasColumnName("Menu_id");
            entity.Property(e => e.Mnemonic).HasMaxLength(50);

            entity.HasOne(d => d.Item).WithMany(p => p.MenuBuilds)
                .HasForeignKey(d => d.ItemId)
                .HasConstraintName("FK_MenuBuildItem_OrderDialog");

            entity.HasOne(d => d.Menu).WithMany(p => p.MenuBuilds)
                .HasForeignKey(d => d.MenuId)
                .HasConstraintName("FK_MenuBuild_MenuBuildMeta");
        });

        modelBuilder.Entity<MenuBuildMetum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MenuBuil__3213E83F297792AB");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Columns).HasDefaultValue((byte)3);
            entity.Property(e => e.DisplayText).IsUnicode(false);
            entity.Property(e => e.Name).IsUnicode(false);
            entity.Property(e => e.RequestStatus)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("PENDING");
        });

        modelBuilder.Entity<Ndf>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__NDF__3213E83F3D09905B");

            entity.ToTable("NDF");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Dea).IsUnicode(false);
            entity.Property(e => e.DispenseUnit).IsUnicode(false);
            entity.Property(e => e.Generic).IsUnicode(false);
            entity.Property(e => e.InactiveDate).HasColumnType("datetime");
            entity.Property(e => e.Ndc)
                .IsUnicode(false)
                .HasColumnName("NDC");
            entity.Property(e => e.PackageSize).IsUnicode(false);
            entity.Property(e => e.PackageType).IsUnicode(false);
            entity.Property(e => e.PrintName).IsUnicode(false);
            entity.Property(e => e.ProductName).IsUnicode(false);
        });

        modelBuilder.Entity<OrderDialog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OrderDia__3213E83F092BEE58");

            entity.ToTable("OrderDialog");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.DisplayGroup).IsUnicode(false);
            entity.Property(e => e.DisplayText).IsUnicode(false);
            entity.Property(e => e.Items).IsUnicode(false);
            entity.Property(e => e.Name).IsUnicode(false);
            entity.Property(e => e.Package).IsUnicode(false);
            entity.Property(e => e.Responses).IsUnicode(false);
            entity.Property(e => e.Type).IsUnicode(false);
        });

        modelBuilder.Entity<OrderMenu>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("OrderMenu");

            entity.Property(e => e.DisplayOnly).HasMaxLength(4000);
            entity.Property(e => e.DisplayText).HasMaxLength(4000);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Item).HasMaxLength(4000);
            entity.Property(e => e.ItemDisplay).IsUnicode(false);
            entity.Property(e => e.Mnemonic).HasMaxLength(4000);
            entity.Property(e => e.OrderDialogId)
                .HasMaxLength(4000)
                .HasColumnName("OrderDialogID");
            entity.Property(e => e.Seq).HasMaxLength(4000);
        });

        modelBuilder.Entity<PharmacyOrderableItem>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Pharmacy__3213E83F86EA7B67");

            entity.ToTable("PharmacyOrderableItem");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.AlertMsg).IsUnicode(false);
            entity.Property(e => e.AssociatedImmunization).IsUnicode(false);
            entity.Property(e => e.DayOrDoseLimit).IsUnicode(false);
            entity.Property(e => e.DefaultMedRoute).IsUnicode(false);
            entity.Property(e => e.DosageForm).IsUnicode(false);
            entity.Property(e => e.FormularyStatus).IsUnicode(false);
            entity.Property(e => e.InactiveDate).IsUnicode(false);
            entity.Property(e => e.IvFlag).IsUnicode(false);
            entity.Property(e => e.MedRoutes).IsUnicode(false);
            entity.Property(e => e.OrderableName).IsUnicode(false);
            entity.Property(e => e.PatientInstructions).IsUnicode(false);
            entity.Property(e => e.Schedule).IsUnicode(false);
            entity.Property(e => e.ScheduleType).IsUnicode(false);
            entity.Property(e => e.Synonym).IsUnicode(false);
        });

        modelBuilder.Entity<VwNdcLookup>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_NdcLookup");

            entity.Property(e => e.CurrentIen).HasColumnName("CurrentIEN");
            entity.Property(e => e.CurrentNdc)
                .IsUnicode(false)
                .HasColumnName("CurrentNDC");
            entity.Property(e => e.Dea).IsUnicode(false);
            entity.Property(e => e.DispenseUnit).IsUnicode(false);
            entity.Property(e => e.DrugFileName).IsUnicode(false);
            entity.Property(e => e.Generic).IsUnicode(false);
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.InactiveDate).HasColumnType("datetime");
            entity.Property(e => e.Ndc)
                .IsUnicode(false)
                .HasColumnName("NDC");
            entity.Property(e => e.NdfInactiveDate).HasColumnType("datetime");
            entity.Property(e => e.PackageSize).IsUnicode(false);
            entity.Property(e => e.PackageType).IsUnicode(false);
            entity.Property(e => e.PrintName).IsUnicode(false);
            entity.Property(e => e.ProductName).IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}