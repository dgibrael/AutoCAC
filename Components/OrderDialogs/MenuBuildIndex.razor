@page "/menubuild"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService
@inject LoadDataGridService LoadDataGridService
@using AutoCAC.Models
@using Microsoft.EntityFrameworkCore
@using AutoCAC.Extensions
@inject IDbContextFactory<AutoCAC.Models.mainContext> DbFactory

<RadzenStack>
    <RadzenRow AlignItems="AlignItems.Center">
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenText Text="Menu Builder" TextStyle="TextStyle.H3" TagName="TagName.H1" style="margin: 0" />
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
                <RadzenButton Icon="add_circle_outline" Text="Add" Click="@AddButtonClick" Variant="Variant.Flat" />
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    <RadzenRow>
        <RadzenDataGrid @ref="grid0" TItem="AutoCAC.Models.MenuBuildMetum" Data="@data" Count="@count" LoadData="@LoadData" RowSelect="OnRowSelect"
        AllowPaging="true" ShowPagingSummary="true" PageSizeOptions=@(new int[]{5, 10, 20, 30, 50}) ColumnWidth="200px"
        FilterMode="FilterMode.Simple" AllowFiltering="true" AllowSorting="true">
            <Columns>
                <RadzenDataGridColumn TItem="AutoCAC.Models.MenuBuildMetum" Property="DisplayText" Title="Display Name" FilterPlaceholder="Search by Name..." />
                <RadzenDataGridColumn TItem="AutoCAC.Models.MenuBuildMetum" Property="RequestStatus" Title="Status" FilterPlaceholder="Search by Status..." />
            </Columns>
        </RadzenDataGrid>
    </RadzenRow>
</RadzenStack>

@code {
    [CascadingParameter(Name = "MainLayout")] public MainLayout Layout { get; set; }
    protected IEnumerable<AutoCAC.Models.MenuBuildMetum> data;
    protected int count = 0;
    protected RadzenDataGrid<AutoCAC.Models.MenuBuildMetum> grid0;
    bool? shouldCount = true;

    protected async Task LoadData(LoadDataArgs args)
    {
        await Layout.SetLoading(true);
        var query = DbFactory.QueryFromObj<AutoCAC.Models.MenuBuildMetum>()
        .AsNoTracking()
        ;
        var result = await LoadDataGridService.ApplyLoadData(query, args, shouldCount);
        data = result.Data;
        count = result.Count;
        shouldCount = null;
        await Layout.SetLoading(false);
    }

    protected async Task OnRowSelect(AutoCAC.Models.MenuBuildMetum args)
    {
        NavigationManager.NavigateTo($"menubuild/{args.Id}");
    }

    protected async Task AddButtonClick(MouseEventArgs args)
    {
        NavigationManager.NavigateTo("menubuild/new");
    }

}
