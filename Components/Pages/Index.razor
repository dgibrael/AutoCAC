@page "/"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService
<PageTitle>Index</PageTitle>
<RadzenRow Gap="5" RowGap="5">
    @if (!string.IsNullOrEmpty(Layout.ErrorMessage))
    {
        <p style="color: red">@Layout.ErrorMessage</p>
    }
    else if (!string.IsNullOrEmpty(Layout.RPMS.LastReceivedRaw))
    {
        <h4 class="mt-4">Last Received:</h4>
        <pre>@Layout.RPMS.LastReceivedRaw</pre>
    }

</RadzenRow>

@code {
    [CascadingParameter(Name = "MainLayout")] public MainLayout mainLayout { get; set; }
    private MainLayout Layout => mainLayout ?? new MainLayout();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Layout.RPMS.IsConnected)
            {
                HandleConnected();
            }
            Layout.RPMS.OnConnected += HandleConnected;
        }
    }
    private void HandleConnected()
    {
        Layout.RPMS.GoToMainMenu();
        Layout.RPMS.Send("NDC");
        InvokeAsync(StateHasChanged);
    }

}

