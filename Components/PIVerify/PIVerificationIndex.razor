@page "/piverify"
@using AutoCAC.Models
@inject DialogService DialogService
@inject AutoCAC.Services.UserContextService UserContext
@using AutoCAC.Components.Templates.PatientSearch
@inject IDbContextFactory<AutoCAC.Models.mainContext> DbFactory
<PageTitle>Private Insurance Verification</PageTitle>

<AuthorizedGroups Groups="@(new[] { "PharmacistSupervisor" })">
    <DataGridEditable TItem="PiVerification" AddAction="AddRecordAsync" QueryFactory="@QueryFactory">
        <RadzenDataGridColumn TItem="PiVerification" Property="PatientId" Title="Patient" FilterProperty="Patient.Name">
            <Template Context="x">
                @x?.Patient?.Name
            </Template>
            <EditTemplate Context="r">
                <PatientDropDownGrid @bind-Value="r.PatientId" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="PiVerification" Property="CurrentStatus" Title="Status">
            <Template Context="t">
                @{
                    string curStatus = t.CurrentStatus;
                    string nextStatus = statusChoices.Next(curStatus);
                    string prevStatus = statusChoices.Previous(curStatus);
                }
                <RadzenStack Orientation="Orientation.Horizontal">
                    @if(curStatus != "New")
                    {
                        <div title="move back">
                            <RadzenButton Icon="arrow_back" ButtonStyle="ButtonStyle.Warning"/>
                        </div>
                    }
                    @if(curStatus != "Completed")
                    {
                        <div title="Complete">
                            <RadzenButton Icon="arrow_forward" ButtonStyle="ButtonStyle.Success"/>
                        </div>
                    }
                </RadzenStack>
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="PiVerification" Property="Bin" Title="BIN">
            <EditTemplate Context="r">
                <RadzenTextBox @bind-Value="r.Bin" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="PiVerification" Property="Pcn" Title="PCN">
            <EditTemplate Context="r">
                <RadzenTextBox @bind-Value="r.Pcn" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="PiVerification" Property="GroupId" Title="Group ID">
            <EditTemplate Context="r">
                <RadzenTextBox @bind-Value="r.GroupId" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="PiVerification" Property="CardholderId" Title="Cardholder ID">
            <EditTemplate Context="r">
                <RadzenTextBox @bind-Value="r.CardholderId" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="PiVerification" Property="CreatedBy" Title="Created By" />
        <RadzenDataGridColumn TItem="PiVerification" Property="SubmittedBy" Title="Submitted By"/>
        <RadzenDataGridColumn TItem="PiVerification" Property="VerifiedBy" Title="Verified By"/>
        <RadzenDataGridColumn TItem="PiVerification" Property="CompletedBy" Title="Completed By" />
        <RadzenDataGridColumn TItem="PiVerification" Property="LastModified" Title="Last Modified"/>
    </DataGridEditable>
</AuthorizedGroups>

@code {
    private List<string> statusChoices = new() { "New", "Submitted", "Verified", "Completed" };
    private IQueryable<AutoCAC.Models.PiVerification> QueryFactory()
    {
        IQueryable<AutoCAC.Models.PiVerification> qry = DbFactory.QueryFromObj<AutoCAC.Models.PiVerification>().AsNoTracking();
        return qry.Include(x => x.Patient).Include(x => x.PiVerificationComments);

    }
    private Task<PiVerification> AddRecordAsync()
    {
        return Task.FromResult(new PiVerification
        {
            LastModified = DateTime.UtcNow,
            CurrentStatus = "New",
            CreatedBy = UserContext.Username
        });
    }
}
