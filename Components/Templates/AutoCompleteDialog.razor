@inject DialogService DialogService

<RadzenTemplateForm TItem="string" Data="@_value" Submit="() => DialogService.Close(_value)">
    <RadzenAutoComplete Data="Suggestions"
                        @bind-Value="_value" @ref="_autocomplete"
                        Placeholder="@Placeholder"
                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                        OpenOnFocus="@(string.IsNullOrEmpty(InitialValue))"
                        Style="width:100%;" />

    <div class="mt-3 flex justify-end gap-2">
        <RadzenButton Text="Cancel" ButtonType="ButtonType.Button"
                      ButtonStyle="ButtonStyle.Light"
                      Click="() => DialogService.Close(null)" />
        <RadzenButton Text="OK"
                      ButtonStyle="ButtonStyle.Primary"
                      Disabled="@string.IsNullOrWhiteSpace(_value)"
                      ButtonType="ButtonType.Submit" />
    </div>
</RadzenTemplateForm>

@code {
    [Parameter, EditorRequired] public IEnumerable<string> Suggestions { get; set; }
    [Parameter] public string Placeholder { get; set; } = string.Empty;
    [Parameter] public string InitialValue { get; set; }
    private string _value;
    protected RadzenAutoComplete _autocomplete;
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            _value = InitialValue;
            StateHasChanged();
        }
    }
    void SubmitForm()
    {
        DialogService.Close(_value);
    }
}
